{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shreyansh\\\\Desktop\\\\STC\\\\teacher\\\\src\\\\Createtest\\\\Testinput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './Testinput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Testinput = () => {\n  _s();\n  const {\n    className,\n    totalMarks,\n    subject\n  } = useParams();\n  const [testdata, setTestdata] = useState([]);\n  const [inputValues, setInputValues] = useState({});\n  const [productDetails, setProductDetails] = useState({\n    subject: subject,\n    className: className,\n    totalMarks: totalMarks\n  });\n  const fetchInfo = async className => {\n    try {\n      const response = await fetch(`http://localhost:5000/classdata?classNumber=${className}`);\n      const data = await response.json();\n      alert(data);\n      if (Array.isArray(data)) {\n        setTestdata(data);\n      } else {\n        console.error(\"Data fetched is not an array:\", data);\n        setTestdata([]);\n      }\n    } catch (error) {\n      console.log(\"Error in fetching data\", error);\n    }\n  };\n  useEffect(() => {\n    fetchInfo(className);\n  }, [className]);\n  const handleChange = (e, id) => {\n    const {\n      value\n    } = e.target;\n    if (value > totalMarks) {\n      alert(\"You have enterd a wrong value\");\n    } else {\n      setInputValues(prevValues => ({\n        ...prevValues,\n        [id]: value\n      }));\n    }\n  };\n  const [to, setTo] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const testDataArray = testdata.map(student => ({\n      id: student.id,\n      marks: inputValues[student.id] || 0\n    }));\n    const dataToSend = {\n      subject: productDetails.subject,\n      classNumber: productDetails.className,\n      totalMarks: productDetails.totalMarks,\n      testData: testDataArray\n    };\n    try {\n      const response = await fetch(`http://localhost:5000/testdata`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dataToSend)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        alert(\"Data updated successfully\");\n        // fetchInfo(className); // Re-fetch data to reflect updates\n      } else {\n        console.error(\"Failed to update data\");\n      }\n    } catch (error) {\n      console.error(\"Error in submitting data\", error);\n    }\n    const response = await axios.post('http://localhost:5000/send-sms', {\n      to,\n      message\n    });\n    console.log('SMS sent successfully:', response.data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-product\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"All Student List of \", className]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-format-main\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Student Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Roll No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Total Marks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Marks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listproduct-allproduct\",\n          children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), testdata.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-format-main listproduct-format\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: product.RollNo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: totalMarks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"marks\",\n              value: inputValues[product.id] || '',\n              onChange: e => handleChange(e, product.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, product.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Testinput, \"PuWKYeDdJ4emCXwqVaywmEK8YJo=\", false, function () {\n  return [useParams];\n});\n_c = Testinput;\nexport default Testinput;\nvar _c;\n$RefreshReg$(_c, \"Testinput\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Testinput","_s","className","totalMarks","subject","testdata","setTestdata","inputValues","setInputValues","productDetails","setProductDetails","fetchInfo","response","fetch","data","json","alert","Array","isArray","console","error","log","handleChange","e","id","value","target","prevValues","to","setTo","message","setMessage","handleSubmit","preventDefault","testDataArray","map","student","marks","dataToSend","classNumber","testData","method","headers","body","JSON","stringify","ok","axios","post","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","product","name","RollNo","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Shreyansh/Desktop/STC/teacher/src/Createtest/Testinput.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './Testinput.css';\r\n\r\nconst Testinput = () => {\r\n  const { className, totalMarks, subject } = useParams();\r\n  const [testdata, setTestdata] = useState([]);\r\n  const [inputValues, setInputValues] = useState({});\r\n  const [productDetails, setProductDetails] = useState({\r\n    subject: subject,\r\n    className: className,\r\n    totalMarks: totalMarks,\r\n  });\r\n  \r\n\r\n  \r\n\r\n  const fetchInfo = async (className) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/classdata?classNumber=${className}`);\r\n      const data = await response.json();\r\n      alert(data);\r\n      if (Array.isArray(data)) {\r\n        \r\n        setTestdata(data);\r\n      } else {\r\n        console.error(\"Data fetched is not an array:\", data);\r\n        setTestdata([]);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in fetching data\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchInfo(className);\r\n  }, [className]);\r\n\r\n  const handleChange = (e, id) => {\r\n    const { value } = e.target;\r\n    if(value>totalMarks){\r\n      alert(\"You have enterd a wrong value\");\r\n\r\n    }\r\n    else{\r\n    setInputValues((prevValues) => ({ ...prevValues, [id]: value }));\r\n    }\r\n  };\r\n  const [to, setTo] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n   \r\n\r\n   \r\n\r\n    const testDataArray = testdata.map(student => ({\r\n      id: student.id,\r\n      marks: inputValues[student.id] || 0\r\n    }));\r\n\r\n    const dataToSend = {\r\n      subject: productDetails.subject,\r\n      classNumber: productDetails.className,\r\n      totalMarks: productDetails.totalMarks,\r\n      testData: testDataArray,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/testdata`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(dataToSend),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        alert(\"Data updated successfully\");\r\n       // fetchInfo(className); // Re-fetch data to reflect updates\r\n        \r\n      } else {\r\n        console.error(\"Failed to update data\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error in submitting data\", error);\r\n    }\r\n    \r\n      \r\n          const response = await axios.post('http://localhost:5000/send-sms', { to, message });\r\n          console.log('SMS sent successfully:', response.data);\r\n      \r\n  \r\n  };\r\n\r\n  return (\r\n    <div className='student-container'>\r\n      <div className=\"list-product\">\r\n        <h2>All Student List of {className}</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"list-format-main\">\r\n            <p>Student Name</p>\r\n            <p>Roll No</p>\r\n            <p>Total Marks</p>\r\n            <p>Marks</p>\r\n          </div>\r\n          <div className=\"listproduct-allproduct\">\r\n            <hr />\r\n            {testdata.map((product) => (\r\n              <div key={product.id} className='list-format-main listproduct-format'>\r\n                <p>{product.name}</p>\r\n                <p>{product.RollNo}</p>\r\n                <p>{totalMarks}</p>\r\n                <input\r\n                  type='text'\r\n                  name='marks'\r\n                  value={inputValues[product.id] || ''}\r\n                  onChange={(e) => handleChange(e, product.id)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Testinput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}