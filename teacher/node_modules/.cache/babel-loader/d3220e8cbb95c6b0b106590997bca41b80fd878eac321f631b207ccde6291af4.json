{"ast":null,"code":"var _jsxFileName = \"E:\\\\TSP_project2\\\\teacher\\\\src\\\\components\\\\Homepage\\\\PreviousMessages.jsx\",\n  _s = $RefreshSig$();\n// PreviousMessages.js\nimport React, { useEffect, useState } from 'react';\nimport './PreviousMessages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PreviousMessages() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const classNumber = localStorage.getItem('classNumber');\n    const fetchAllMessages = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/message_data?ClassNumber=${classNumber}`);\n        const data = await response.json();\n        if (data && data.length > 0) {\n          setMessages(data);\n        } else {\n          setMessages([]);\n        }\n      } catch (error) {\n        console.error('Error fetching all messages:', error);\n        setMessages([]);\n      }\n    };\n    fetchAllMessages();\n  }, []);\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(); // Format the date to display only the date part\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"message-list\",\n      children: messages.length > 0 ? messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"message-item\",\n        children: [formatDate(message.date), \" - \", message.Message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No messages found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(PreviousMessages, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = PreviousMessages;\nexport default PreviousMessages;\nvar _c;\n$RefreshReg$(_c, \"PreviousMessages\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PreviousMessages","_s","messages","setMessages","classNumber","localStorage","getItem","fetchAllMessages","response","fetch","data","json","length","error","console","formatDate","dateString","date","Date","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","Message","_c","$RefreshReg$"],"sources":["E:/TSP_project2/teacher/src/components/Homepage/PreviousMessages.jsx"],"sourcesContent":["// PreviousMessages.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport './PreviousMessages.css';\r\n\r\nfunction PreviousMessages() {\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const classNumber = localStorage.getItem('classNumber');\r\n\r\n    const fetchAllMessages = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/message_data?ClassNumber=${classNumber}`);\r\n        const data = await response.json();\r\n\r\n        if (data && data.length > 0) {\r\n          setMessages(data);\r\n        } else {\r\n          setMessages([]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching all messages:', error);\r\n        setMessages([]);\r\n      }\r\n    };\r\n\r\n    fetchAllMessages();\r\n  }, []);\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(); // Format the date to display only the date part\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>All Messages</h2>\r\n      <ul className=\"message-list\">\r\n        {messages.length > 0 ? (\r\n          messages.map((message, index) => (\r\n            <li key={index} className=\"message-item\">\r\n              {formatDate(message.date)} - {message.Message}\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <li>No messages found.</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PreviousMessages;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMQ,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IAEvD,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kDAAkDL,WAAW,EAAE,CAAC;QAC7F,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,IAAID,IAAI,IAAIA,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;UAC3BT,WAAW,CAACO,IAAI,CAAC;QACnB,CAAC,MAAM;UACLP,WAAW,CAAC,EAAE,CAAC;QACjB;MACF,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDV,WAAW,CAAC,EAAE,CAAC;MACjB;IACF,CAAC;IAEDI,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,OAAOC,IAAI,CAACE,kBAAkB,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBtB,OAAA;MAAAsB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB1B,OAAA;MAAIqB,SAAS,EAAC,cAAc;MAAAC,QAAA,EACzBnB,QAAQ,CAACU,MAAM,GAAG,CAAC,GAClBV,QAAQ,CAACwB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC1B7B,OAAA;QAAgBqB,SAAS,EAAC,cAAc;QAAAC,QAAA,GACrCN,UAAU,CAACY,OAAO,CAACV,IAAI,CAAC,EAAC,KAAG,EAACU,OAAO,CAACE,OAAO;MAAA,GADtCD,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL,CAAC,gBAEF1B,OAAA;QAAAsB,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAC3B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACxB,EAAA,CA9CQD,gBAAgB;AAAA8B,EAAA,GAAhB9B,gBAAgB;AAgDzB,eAAeA,gBAAgB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}