{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shreyansh\\\\Desktop\\\\STC\\\\teacher\\\\src\\\\components\\\\ForgetPassword\\\\OTPForm.jsx\",\n  _s = $RefreshSig$();\n// OTPForm.jsx\nimport React, { useState } from 'react';\nimport { RecaptchaVerifier, signInWithPhoneNumber } from 'firebase/auth';\nimport { auth } from './firebaseConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTPForm = () => {\n  _s();\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [otp, setOtp] = useState('');\n  const [confirmationResult, setConfirmationResult] = useState(null);\n  const handleSendOtp = async () => {\n    try {\n      const recapcha = new RecaptchaVerifier('recaptcha-container', {}, auth);\n      const phoneNumberString = '+91' + phoneNumber; // Add your country code\n      const confirmation = await signInWithPhoneNumber(auth, phoneNumberString, recapcha);\n      setConfirmationResult(confirmation);\n      alert('OTP sent');\n    } catch (error) {\n      console.log('Error in OTP sending', error);\n      alert('Failed to send OTP');\n    }\n  };\n  const handleVerifyOtp = async () => {\n    if (!confirmationResult) {\n      alert('Please request OTP first');\n      return;\n    }\n    try {\n      const result = await confirmationResult.confirm(otp);\n      console.log('User signed in successfully:', result.user);\n      alert('Phone number verified successfully');\n    } catch (error) {\n      console.error('Error during OTP verification', error);\n      alert('Failed to verify OTP');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"phone-verification-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phone Number Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value),\n        placeholder: \"Enter phone number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendOtp,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: otp,\n        onChange: e => setOtp(e.target.value),\n        placeholder: \"Enter OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyOtp,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recaptcha-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPForm, \"pdFYNqHnIvUwNexWqpkz0rlUp0k=\");\n_c = OTPForm;\nexport default OTPForm;\nvar _c;\n$RefreshReg$(_c, \"OTPForm\");","map":{"version":3,"names":["React","useState","RecaptchaVerifier","signInWithPhoneNumber","auth","jsxDEV","_jsxDEV","OTPForm","_s","phoneNumber","setPhoneNumber","otp","setOtp","confirmationResult","setConfirmationResult","handleSendOtp","recapcha","phoneNumberString","confirmation","alert","error","console","log","handleVerifyOtp","result","confirm","user","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/Shreyansh/Desktop/STC/teacher/src/components/ForgetPassword/OTPForm.jsx"],"sourcesContent":["// OTPForm.jsx\r\nimport React, { useState } from 'react';\r\nimport { RecaptchaVerifier, signInWithPhoneNumber } from 'firebase/auth';\r\nimport { auth } from './firebaseConfig';\r\n\r\nconst OTPForm = () => {\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [confirmationResult, setConfirmationResult] = useState(null);\r\n\r\n  \r\n\r\n  const handleSendOtp = async () => {\r\n\r\n    try {\r\n      const recapcha = new RecaptchaVerifier('recaptcha-container', {\r\n        \r\n\r\n      }, auth);\r\n      const phoneNumberString = '+91' + phoneNumber; // Add your country code\r\n      const confirmation = await signInWithPhoneNumber(auth, phoneNumberString, recapcha);\r\n      setConfirmationResult(confirmation);\r\n      alert('OTP sent');\r\n    } catch (error) {\r\n      console.log('Error in OTP sending', error);\r\n      alert('Failed to send OTP');\r\n    }\r\n  };\r\n\r\n  const handleVerifyOtp = async () => {\r\n    if (!confirmationResult) {\r\n      alert('Please request OTP first');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await confirmationResult.confirm(otp);\r\n      console.log('User signed in successfully:', result.user);\r\n      alert('Phone number verified successfully');\r\n    } catch (error) {\r\n      console.error('Error during OTP verification', error);\r\n      alert('Failed to verify OTP');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"phone-verification-container\">\r\n      <h1>Phone Number Verification</h1>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={phoneNumber}\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n          placeholder=\"Enter phone number\"\r\n        />\r\n        <button onClick={handleSendOtp}>Send OTP</button>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={otp}\r\n          onChange={(e) => setOtp(e.target.value)}\r\n          placeholder=\"Enter OTP\"\r\n        />\r\n        <button onClick={handleVerifyOtp}>Verify OTP</button>\r\n      </div>\r\n      <div id=\"recaptcha-container\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OTPForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}