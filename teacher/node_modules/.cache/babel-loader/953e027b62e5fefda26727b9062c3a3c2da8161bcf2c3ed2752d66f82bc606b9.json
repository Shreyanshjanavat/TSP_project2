{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shreyansh\\\\Desktop\\\\STC\\\\teacher\\\\src\\\\components\\\\ForgetPassword\\\\OTPForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport firebase from './firebase'; // Ensure './firebase' correctly points to your Firebase configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTPForm = () => {\n  _s();\n  const [phonenumber, setPhoneNumber] = useState('');\n  const [verificationId, setVerificationId] = useState('');\n  const [otp, setOTP] = useState('');\n  const recaptchaRef = useRef(null);\n  const handleSendOtp = () => {\n    if (recaptchaRef.current) {\n      recaptchaRef.current.innerHTML = '<div id=\"recaptcha-container\"></div>';\n    }\n    const verifier = new firebase.auth.RecaptchaVerifier('recaptcha-container', {\n      size: 'invisible',\n      // Specify size if needed\n      callback: function (response) {\n        // Callback function if needed\n      },\n      defaultCountry: 'IN' // Specify default country code\n    });\n    firebase.auth().signInWithPhoneNumber(phonenumber, verifier).then(confirmationResult => {\n      setVerificationId(confirmationResult.verificationId);\n      // Store verificationId for later use in OTP verification\n    }).catch(error => {\n      console.error('Error sending OTP', error);\n      // Implement proper error handling, e.g., show error to the user\n    });\n  };\n  const handleVerifyOtp = () => {\n    const credential = firebase.auth.PhoneAuthProvider.credential(verificationId, otp);\n    firebase.auth().signInWithCredential(credential).then(result => {\n      // Handle successful verification, e.g., navigate to authenticated area\n    }).catch(error => {\n      console.error('Error verifying OTP', error);\n      // Implement proper error handling, e.g., show error to the user\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phone OTP Authentication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: recaptchaRef,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        placeholder: \"+91 1234567890\",\n        value: phonenumber,\n        onChange: e => setPhoneNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendOtp,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOTP(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyOtp,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPForm, \"yErZ+Ffpg/0WpBJ6C0xTdRDsRyU=\");\n_c = OTPForm;\nexport default OTPForm;\nvar _c;\n$RefreshReg$(_c, \"OTPForm\");","map":{"version":3,"names":["React","useState","useRef","firebase","jsxDEV","_jsxDEV","OTPForm","_s","phonenumber","setPhoneNumber","verificationId","setVerificationId","otp","setOTP","recaptchaRef","handleSendOtp","current","innerHTML","verifier","auth","RecaptchaVerifier","size","callback","response","defaultCountry","signInWithPhoneNumber","then","confirmationResult","catch","error","console","handleVerifyOtp","credential","PhoneAuthProvider","signInWithCredential","result","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Shreyansh/Desktop/STC/teacher/src/components/ForgetPassword/OTPForm.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport firebase from './firebase'; // Ensure './firebase' correctly points to your Firebase configuration\r\n\r\nconst OTPForm = () => {\r\n  const [phonenumber, setPhoneNumber] = useState('');\r\n  const [verificationId, setVerificationId] = useState('');\r\n  const [otp, setOTP] = useState('');\r\n  const recaptchaRef = useRef(null);\r\n\r\n  const handleSendOtp = () => {\r\n    if (recaptchaRef.current) {\r\n      recaptchaRef.current.innerHTML = '<div id=\"recaptcha-container\"></div>';\r\n    }\r\n    const verifier = new firebase.auth.RecaptchaVerifier('recaptcha-container', {\r\n      size: 'invisible', // Specify size if needed\r\n      callback: function (response) {\r\n        // Callback function if needed\r\n      },\r\n      defaultCountry: 'IN' // Specify default country code\r\n    });\r\n\r\n    firebase.auth().signInWithPhoneNumber(phonenumber, verifier)\r\n      .then((confirmationResult) => {\r\n        setVerificationId(confirmationResult.verificationId);\r\n        // Store verificationId for later use in OTP verification\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error sending OTP', error);\r\n        // Implement proper error handling, e.g., show error to the user\r\n      });\r\n  };\r\n\r\n  const handleVerifyOtp = () => {\r\n    const credential = firebase.auth.PhoneAuthProvider.credential(verificationId, otp);\r\n    firebase.auth().signInWithCredential(credential)\r\n      .then((result) => {\r\n        // Handle successful verification, e.g., navigate to authenticated area\r\n       \r\n      })\r\n      .catch((error) => {\r\n        console.error('Error verifying OTP', error);\r\n        // Implement proper error handling, e.g., show error to the user\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phone OTP Authentication</h1>\r\n      <div ref={recaptchaRef}>\r\n        <input\r\n          type='tel'\r\n          placeholder='+91 1234567890'\r\n          value={phonenumber}\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n        />\r\n        <button onClick={handleSendOtp}>Send OTP</button>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type='text'\r\n          placeholder='Enter OTP'\r\n          value={otp}\r\n          onChange={(e) => setOTP(e.target.value)}\r\n        />\r\n        <button onClick={handleVerifyOtp}>Verify OTP</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OTPForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}