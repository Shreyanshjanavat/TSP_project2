{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shreyansh\\\\Desktop\\\\STC\\\\teacher\\\\src\\\\components\\\\Chatbox\\\\OpenMessage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OpenMessage = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [Teacher_id, setTeacher_id] = useState();\n  const [Student_id, setStudent_id] = useState();\n  const [reply, setReply] = useState('');\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/chatbyid?id=${id}`);\n        const data = await response.json();\n        if (data && data.length > 0) {\n          setMessage(data[data.length - 1].Message);\n          setTeacher_id(data[data.length - 1].Teacher_id);\n          setStudent_id(data[data.length - 1].Student_id);\n        }\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n  }, [id]);\n  const handleReplyChange = e => {\n    setReply(e.target.value);\n  };\n  const handleReplySubmit = async () => {\n    const replychat = {\n      Student_id: Student_id,\n      Teacher_id: Teacher_id,\n      Message: reply,\n      Reply: true\n    };\n    try {\n      const response = await fetch('http://localhost:5000/chatdata', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(replychat)\n      });\n      if (response.ok) {\n        console.log('Reply sent successfully');\n      } else {\n        console.error('Failed to send reply');\n      }\n    } catch (error) {\n      console.error('Error sending reply:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: [\"M  \", message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Reply:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"message-input\",\n      placeholder: \"Type your response here...\",\n      value: reply,\n      onChange: handleReplyChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reply-button\",\n      onClick: handleReplySubmit,\n      children: \"Send Reply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(OpenMessage, \"cFa6Hc3eQbkb4XaHkghTnaFyB78=\", false, function () {\n  return [useParams];\n});\n_c = OpenMessage;\nexport default OpenMessage;\nvar _c;\n$RefreshReg$(_c, \"OpenMessage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","OpenMessage","_s","message","setMessage","Teacher_id","setTeacher_id","Student_id","setStudent_id","reply","setReply","id","fetchMessages","response","fetch","data","json","length","Message","error","console","handleReplyChange","e","target","value","handleReplySubmit","replychat","Reply","method","headers","body","JSON","stringify","ok","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Shreyansh/Desktop/STC/teacher/src/components/Chatbox/OpenMessage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst OpenMessage = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [Teacher_id, setTeacher_id] = useState();\r\n  const [Student_id, setStudent_id] = useState();\r\n  const [reply, setReply] = useState('');\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/chatbyid?id=${id}`);\r\n        const data = await response.json();\r\n\r\n        if (data && data.length > 0) {\r\n          setMessage(data[data.length - 1].Message);\r\n          setTeacher_id(data[data.length - 1].Teacher_id);\r\n          setStudent_id(data[data.length - 1].Student_id);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching messages:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, [id]);\r\n\r\n  const handleReplyChange = (e) => {\r\n    setReply(e.target.value);\r\n  };\r\n\r\n  const handleReplySubmit = async () => {\r\n    const replychat = {\r\n      Student_id: Student_id,\r\n      Teacher_id: Teacher_id,\r\n      Message: reply,\r\n      Reply:true\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/chatdata', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(replychat),\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Reply sent successfully');\r\n      } else {\r\n        console.error('Failed to send reply');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending reply:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"message-container\">\r\n      <div className=\"message\">\r\n      M  {message}\r\n      </div>\r\n      <p>Reply:</p>\r\n      <textarea\r\n        className=\"message-input\"\r\n        placeholder=\"Type your response here...\"\r\n        value={reply}\r\n        onChange={handleReplyChange}\r\n      ></textarea>\r\n      <button className=\"reply-button\" onClick={handleReplySubmit}>Send Reply</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenMessage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}