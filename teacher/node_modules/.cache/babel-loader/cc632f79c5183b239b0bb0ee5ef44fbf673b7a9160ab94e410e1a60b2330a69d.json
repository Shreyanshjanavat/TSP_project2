{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shreyansh\\\\Desktop\\\\STC\\\\teacher\\\\src\\\\components\\\\Chatbox\\\\Chatbox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Chatbox.css';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbox = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [teacherName, setTeacherName] = useState('');\n  const [subject, setSubject] = useState('');\n  const {\n    id\n  } = useParams(); // Get the teacher ID from the URL parameters\n  const [Formdata, setFormdata] = useState({\n    Student_id: `${localStorage.getItem('id')}`,\n    \"Teacher_id\": `${id}`,\n    Message: \"\"\n  });\n  const handleTextareaChange = e => {\n    setMessage(e.target.value);\n  };\n  useEffect(() => {\n    const fetchTeacherInfo = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/t_data?id=${id}`);\n        const data = await response.json();\n        setTeacherName(data[0].name);\n        setSubject(data[0].subject);\n      } catch (error) {\n        console.error('Error fetching teacher info:', error);\n      }\n    };\n    fetchTeacherInfo();\n  }, [i]); // Dependency array to refetch if id changes\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Implement your submit logic here\n    console.log('Message submitted:', message);\n    setMessage(''); // Clear the textarea after submission\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"teacher-page-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"teacher-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: teacherName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Subject: \", subject]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-container\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: message,\n          onChange: handleTextareaChange,\n          placeholder: \"Type your message or note here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbox, \"U6TZbPAQP/HJ6D2SNNLAEwBSvxQ=\", false, function () {\n  return [useParams];\n});\n_c = Chatbox;\nexport default Chatbox;\nvar _c;\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Chatbox","_s","message","setMessage","teacherName","setTeacherName","subject","setSubject","id","Formdata","setFormdata","Student_id","localStorage","getItem","Message","handleTextareaChange","e","target","value","fetchTeacherInfo","response","fetch","data","json","name","error","console","i","handleSubmit","preventDefault","log","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/Shreyansh/Desktop/STC/teacher/src/components/Chatbox/Chatbox.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n import './Chatbox.css';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Chatbox = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [teacherName, setTeacherName] = useState('');\r\n  const [subject, setSubject] = useState('');\r\n  const { id } = useParams(); // Get the teacher ID from the URL parameters\r\n  const [Formdata,setFormdata]=useState({\r\n        Student_id:`${localStorage.getItem('id')}`,\r\n        \"Teacher_id\":`${id}`,\r\n        Message:\"\"\r\n  })\r\n\r\n  const handleTextareaChange = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTeacherInfo = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/t_data?id=${id}`);\r\n        const data = await response.json();\r\n        setTeacherName(data[0].name);\r\n        setSubject(data[0].subject);\r\n      } catch (error) {\r\n        console.error('Error fetching teacher info:', error);\r\n      }\r\n    };\r\n\r\n    fetchTeacherInfo();\r\n  }, [i]); // Dependency array to refetch if id changes\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Implement your submit logic here\r\n    console.log('Message submitted:', message);\r\n    setMessage(''); // Clear the textarea after submission\r\n  };\r\n\r\n  return (\r\n    <div className=\"teacher-page-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"teacher-info\">\r\n          <h2>{teacherName}</h2>\r\n          <p>Subject: {subject}</p>\r\n        </div>\r\n        <div className=\"message-container\">\r\n          <textarea\r\n            value={message}\r\n            onChange={handleTextareaChange}\r\n            placeholder=\"Type your message or note here...\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}