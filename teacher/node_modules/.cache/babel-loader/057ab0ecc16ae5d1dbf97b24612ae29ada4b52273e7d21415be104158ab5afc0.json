{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shreyansh\\\\Desktop\\\\STC\\\\teacher\\\\src\\\\components\\\\ForgetPassword\\\\OTPForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport firebase from './firebase'; // Make sure './firebase' correctly points to your Firebase configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTPForm = () => {\n  _s();\n  const [phonenumber, setPhoneNumber] = useState('');\n  const [verificationId, setVerificationId] = useState('');\n  const recaptchaRef = useRef(null);\n\n  // Handle rendering of Recaptcha element\n\n  const handleSendOtp = () => {\n    if (recaptchaRef.current) {\n      recaptchaRef.current.innerHTML = '<div id=\"recaptcha-container\"></div>';\n    }\n    const verifier = new firebase.auth.RecaptchaVerifier('recaptcha-container', {\n      size: 'invisible',\n      // Specify size if needed\n      callback: function (response) {\n        // Callback function if needed\n      },\n      defaultCountry: 'IN' // Specify default country code\n    });\n    firebase.auth().signInWithPhoneNumber(phonenumber, verifier).then(confirmationResult => {\n      setVerificationId(confirmationResult.verificationId);\n      // Handle confirmation result, e.g., navigate to OTP verification screen\n    }).catch(error => {\n      console.error('Error sending OTP', error);\n      // Implement proper error handling, e.g., show error to the user\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phone OTP Authentication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: recaptchaRef,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        placeholder: \"+91 1234567890\",\n        value: phonenumber,\n        onChange: e => setPhoneNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendOtp,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPForm, \"SPkIyRIm2BzMzctW8coMO0GG3C4=\");\n_c = OTPForm;\nexport default OTPForm;\nvar _c;\n$RefreshReg$(_c, \"OTPForm\");","map":{"version":3,"names":["React","useState","useRef","firebase","jsxDEV","_jsxDEV","OTPForm","_s","phonenumber","setPhoneNumber","verificationId","setVerificationId","recaptchaRef","handleSendOtp","current","innerHTML","verifier","auth","RecaptchaVerifier","size","callback","response","defaultCountry","signInWithPhoneNumber","then","confirmationResult","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Shreyansh/Desktop/STC/teacher/src/components/ForgetPassword/OTPForm.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport firebase from './firebase'; // Make sure './firebase' correctly points to your Firebase configuration\r\n\r\nconst OTPForm = () => {\r\n  const [phonenumber, setPhoneNumber] = useState('');\r\n  const [verificationId, setVerificationId] = useState('');\r\n  const recaptchaRef = useRef(null);\r\n\r\n  // Handle rendering of Recaptcha element\r\n  \r\n\r\n  const handleSendOtp = () => {\r\n    if (recaptchaRef.current) {\r\n      recaptchaRef.current.innerHTML = '<div id=\"recaptcha-container\"></div>';\r\n    }\r\n    const verifier = new firebase.auth.RecaptchaVerifier('recaptcha-container', {\r\n      size: 'invisible', // Specify size if needed\r\n      callback: function (response) {\r\n        // Callback function if needed\r\n      },\r\n      defaultCountry: 'IN' // Specify default country code\r\n    });\r\n\r\n    firebase.auth().signInWithPhoneNumber(phonenumber, verifier)\r\n      .then((confirmationResult) => {\r\n        setVerificationId(confirmationResult.verificationId);\r\n        // Handle confirmation result, e.g., navigate to OTP verification screen\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error sending OTP', error);\r\n        // Implement proper error handling, e.g., show error to the user\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phone OTP Authentication</h1>\r\n      <div ref={recaptchaRef}>\r\n        <input\r\n          type='tel'\r\n          placeholder='+91 1234567890'\r\n          value={phonenumber}\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n        />\r\n        <button onClick={handleSendOtp}>Send OTP</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OTPForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMW,YAAY,GAAGV,MAAM,CAAC,IAAI,CAAC;;EAEjC;;EAGA,MAAMW,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAID,YAAY,CAACE,OAAO,EAAE;MACxBF,YAAY,CAACE,OAAO,CAACC,SAAS,GAAG,sCAAsC;IACzE;IACA,MAAMC,QAAQ,GAAG,IAAIb,QAAQ,CAACc,IAAI,CAACC,iBAAiB,CAAC,qBAAqB,EAAE;MAC1EC,IAAI,EAAE,WAAW;MAAE;MACnBC,QAAQ,EAAE,SAAAA,CAAUC,QAAQ,EAAE;QAC5B;MAAA,CACD;MACDC,cAAc,EAAE,IAAI,CAAC;IACvB,CAAC,CAAC;IAEFnB,QAAQ,CAACc,IAAI,CAAC,CAAC,CAACM,qBAAqB,CAACf,WAAW,EAAEQ,QAAQ,CAAC,CACzDQ,IAAI,CAAEC,kBAAkB,IAAK;MAC5Bd,iBAAiB,CAACc,kBAAkB,CAACf,cAAc,CAAC;MACpD;IACF,CAAC,CAAC,CACDgB,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzC;IACF,CAAC,CAAC;EACN,CAAC;EAED,oBACEtB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC5B,OAAA;MAAK6B,GAAG,EAAEtB,YAAa;MAAAiB,QAAA,gBACrBxB,OAAA;QACE8B,IAAI,EAAC,KAAK;QACVC,WAAW,EAAC,gBAAgB;QAC5BC,KAAK,EAAE7B,WAAY;QACnB8B,QAAQ,EAAGC,CAAC,IAAK9B,cAAc,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACF5B,OAAA;QAAQoC,OAAO,EAAE5B,aAAc;QAAAgB,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA7CID,OAAO;AAAAoC,EAAA,GAAPpC,OAAO;AA+Cb,eAAeA,OAAO;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}