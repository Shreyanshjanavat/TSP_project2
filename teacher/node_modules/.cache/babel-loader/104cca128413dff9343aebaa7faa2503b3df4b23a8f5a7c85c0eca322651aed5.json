{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shreyansh\\\\Desktop\\\\STC\\\\teacher\\\\src\\\\components\\\\ForgetPassword\\\\OTPForm.jsx\",\n  _s = $RefreshSig$();\n// OTPForm.js\nimport React, { useState } from 'react';\nimport { RecaptchaVerifier, signInWithPhoneNumber } from 'firebase/auth';\nimport { auth } from './firebaseConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTPForm = () => {\n  _s();\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [otp, setOtp] = useState('');\n  const [verificationId, setVerificationId] = useState('');\n  const [user, setuser] = useState;\n  const setupRecaptcha = () => {\n    window.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {\n      size: 'invisible',\n      callback: response => {\n        // reCAPTCHA solved - allow signInWithPhoneNumber.\n        console.log('Recaptcha verified');\n      }\n    }, auth);\n  };\n  const handleSendOtp = async () => {\n    try {\n      const recaptcha = new RecaptchaVerifier(auth, 'recaptcha', {});\n      const conformation = signInWithPhoneNumber(auth, phoneNumber, recaptcha);\n      console.log(conformation);\n    } catch (error) {\n      console(\"Error in otp sending\", error);\n    }\n  };\n  const handleVerifyOtp = async () => {\n    const credential = firebase.auth.PhoneAuthProvider.credential(verificationId, otp);\n    try {\n      await auth.signInWithCredential(credential);\n      alert('Phone number verified successfully');\n    } catch (error) {\n      console.error('Error during OTP verification', error);\n      alert('Failed to verify OTP');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"phone-verification-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phone Number Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value),\n        placeholder: \"Enter phone number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendOtp,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: otp,\n        onChange: e => setOtp(e.target.value),\n        placeholder: \"Enter OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyOtp,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recaptcha-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPForm, \"2gcNSR717FOKQ8IIMaebTVxsYUw=\");\n_c = OTPForm;\nexport default OTPForm;\nvar _c;\n$RefreshReg$(_c, \"OTPForm\");","map":{"version":3,"names":["React","useState","RecaptchaVerifier","signInWithPhoneNumber","auth","jsxDEV","_jsxDEV","OTPForm","_s","phoneNumber","setPhoneNumber","otp","setOtp","verificationId","setVerificationId","user","setuser","setupRecaptcha","window","recaptchaVerifier","size","callback","response","console","log","handleSendOtp","recaptcha","conformation","error","handleVerifyOtp","credential","firebase","PhoneAuthProvider","signInWithCredential","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/Shreyansh/Desktop/STC/teacher/src/components/ForgetPassword/OTPForm.jsx"],"sourcesContent":["// OTPForm.js\r\nimport React, { useState } from 'react';\r\nimport { RecaptchaVerifier, signInWithPhoneNumber } from 'firebase/auth';\r\nimport { auth } from './firebaseConfig';\r\n\r\nconst OTPForm = () => {\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [verificationId, setVerificationId] = useState('');\r\n  const [user,setuser]=useState\r\n\r\n  const setupRecaptcha = () => {\r\n    window.recaptchaVerifier = new RecaptchaVerifier(\r\n      'recaptcha-container',\r\n      {\r\n        size: 'invisible',\r\n        callback: (response) => {\r\n          // reCAPTCHA solved - allow signInWithPhoneNumber.\r\n          console.log('Recaptcha verified');\r\n        },\r\n      },\r\n      auth\r\n    );\r\n  };\r\n\r\n  const handleSendOtp = async () => {\r\n    try{\r\n      const recaptcha=new RecaptchaVerifier(auth,'recaptcha',{});\r\n      const conformation=signInWithPhoneNumber(auth,phoneNumber,recaptcha);\r\n      console.log(conformation);\r\n    }\r\n    catch(error){\r\n      console(\"Error in otp sending\",error);\r\n    }\r\n  };\r\n\r\n  const handleVerifyOtp = async () => {\r\n    const credential = firebase.auth.PhoneAuthProvider.credential(verificationId, otp);\r\n    try {\r\n      await auth.signInWithCredential(credential);\r\n      alert('Phone number verified successfully');\r\n    } catch (error) {\r\n      console.error('Error during OTP verification', error);\r\n      alert('Failed to verify OTP');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"phone-verification-container\">\r\n      <h1>Phone Number Verification</h1>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={phoneNumber}\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n          placeholder=\"Enter phone number\"\r\n        />\r\n        <button onClick={handleSendOtp}>Send OTP</button>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={otp}\r\n          onChange={(e) => setOtp(e.target.value)}\r\n          placeholder=\"Enter OTP\"\r\n        />\r\n        <button onClick={handleVerifyOtp}>Verify OTP</button>\r\n      </div>\r\n      <div id=\"recaptcha-container\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OTPForm;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,iBAAiB,EAAEC,qBAAqB,QAAQ,eAAe;AACxE,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACc,IAAI,EAACC,OAAO,CAAC,GAACf,QAAQ;EAE7B,MAAMgB,cAAc,GAAGA,CAAA,KAAM;IAC3BC,MAAM,CAACC,iBAAiB,GAAG,IAAIjB,iBAAiB,CAC9C,qBAAqB,EACrB;MACEkB,IAAI,EAAE,WAAW;MACjBC,QAAQ,EAAGC,QAAQ,IAAK;QACtB;QACAC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACnC;IACF,CAAC,EACDpB,IACF,CAAC;EACH,CAAC;EAED,MAAMqB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAG;MACD,MAAMC,SAAS,GAAC,IAAIxB,iBAAiB,CAACE,IAAI,EAAC,WAAW,EAAC,CAAC,CAAC,CAAC;MAC1D,MAAMuB,YAAY,GAACxB,qBAAqB,CAACC,IAAI,EAACK,WAAW,EAACiB,SAAS,CAAC;MACpEH,OAAO,CAACC,GAAG,CAACG,YAAY,CAAC;IAC3B,CAAC,CACD,OAAMC,KAAK,EAAC;MACVL,OAAO,CAAC,sBAAsB,EAACK,KAAK,CAAC;IACvC;EACF,CAAC;EAED,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,UAAU,GAAGC,QAAQ,CAAC3B,IAAI,CAAC4B,iBAAiB,CAACF,UAAU,CAACjB,cAAc,EAAEF,GAAG,CAAC;IAClF,IAAI;MACF,MAAMP,IAAI,CAAC6B,oBAAoB,CAACH,UAAU,CAAC;MAC3CI,KAAK,CAAC,oCAAoC,CAAC;IAC7C,CAAC,CAAC,OAAON,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDM,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF,CAAC;EAED,oBACE5B,OAAA;IAAK6B,SAAS,EAAC,8BAA8B;IAAAC,QAAA,gBAC3C9B,OAAA;MAAA8B,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClClC,OAAA;MAAA8B,QAAA,gBACE9B,OAAA;QACEmC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEjC,WAAY;QACnBkC,QAAQ,EAAGC,CAAC,IAAKlC,cAAc,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAChDI,WAAW,EAAC;MAAoB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACFlC,OAAA;QAAQyC,OAAO,EAAEtB,aAAc;QAAAW,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACNlC,OAAA;MAAA8B,QAAA,gBACE9B,OAAA;QACEmC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE/B,GAAI;QACXgC,QAAQ,EAAGC,CAAC,IAAKhC,MAAM,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACxCI,WAAW,EAAC;MAAW;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFlC,OAAA;QAAQyC,OAAO,EAAElB,eAAgB;QAAAO,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACNlC,OAAA;MAAK0C,EAAE,EAAC;IAAqB;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAAChC,EAAA,CAlEID,OAAO;AAAA0C,EAAA,GAAP1C,OAAO;AAoEb,eAAeA,OAAO;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}