{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shreyansh\\\\Desktop\\\\STC\\\\teacher\\\\src\\\\Createtest\\\\Testinput.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Testinput = () => {\n  _s();\n  const {\n    className\n  } = useParams();\n  const [testdata, settestdata] = useState([]);\n  const fetchinfo = async className => {\n    try {\n      const response = await fetch(`http://localhost:5000/classdata?classNumber=${className}`);\n      const data = await response.json();\n      settestdata(data);\n      console.log(testdata);\n    } catch (error) {\n      console.log(\"Error in fetching data\", error);\n    }\n  };\n  useEffect(() => {\n    fetchinfo(className);\n  }, [className]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-product\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" All Student List of \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-format-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Student name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"RollNo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" marks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", className]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lsitproduct-allproduct\",\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), testdata.map((student, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-format-main listproduct-format\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: student.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: student.RollNo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Testinput, \"SIFP0XRfrZX1htu5ltCz+BmxfYk=\", false, function () {\n  return [useParams];\n});\n_c = Testinput;\nexport default Testinput;\nvar _c;\n$RefreshReg$(_c, \"Testinput\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Testinput","_s","className","testdata","settestdata","fetchinfo","response","fetch","data","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","student","index","name","RollNo","_c","$RefreshReg$"],"sources":["C:/Users/Shreyansh/Desktop/STC/teacher/src/Createtest/Testinput.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useEffect,useState } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\n\r\n\r\nconst Testinput = () => {\r\n    const {className}=useParams();\r\n   const [testdata,settestdata]=useState([]);\r\n   const fetchinfo=async(className)=>{\r\n    try{\r\n      const response=await fetch(`http://localhost:5000/classdata?classNumber=${className}`);\r\n      const data=await response.json();\r\n      settestdata(data);\r\n      console.log(testdata);\r\n    }\r\n    catch(error){\r\n      console.log(\"Error in fetching data\",error);\r\n    }\r\n\r\n   };\r\n   useEffect(() => {\r\n  \r\n      fetchinfo(className);\r\n  \r\n  }, [className]);\r\n  return (\r\n    <div className='student-container'>\r\n        <div className=\"list-product\">\r\n      <p> All Student List of </p>\r\n      <div className=\"list-format-main\">\r\n        <p>Student name</p>\r\n        <p>RollNo</p>\r\n        <p> marks</p>\r\n        <p> {className}</p>\r\n        \r\n      </div>\r\n      <div className=\"lsitproduct-allproduct\">\r\n        <hr/>\r\n        {testdata.map((student,index)=>{\r\n            return <div key={index} className='list-format-main listproduct-format'>\r\n              \r\n              <p>{student.name}</p>\r\n              <p>{student.RollNo}</p>\r\n              {/* <p>{product.class}</p> */}\r\n             \r\n            </div>\r\n          \r\n\r\n      \r\n        })}\r\n     </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Testinput\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}