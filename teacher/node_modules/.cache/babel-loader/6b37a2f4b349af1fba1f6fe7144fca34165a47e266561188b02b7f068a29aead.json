{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shreyansh\\\\Desktop\\\\STC\\\\teacher\\\\src\\\\components\\\\Chatbox\\\\TeacherChatbox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './TeacherChatbox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeacherChatbox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [studentid, setstudentid] = useState();\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const id = localStorage.getItem('id');\n      try {\n        const response = await fetch(`http://localhost:5000/studentchat?Teacher_id=${id}`); // Adjust the endpoint as necessary\n        const data = await response.json();\n        setMessages(data);\n        setstudentid;\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"messages-list\",\n      children: messages.length > 0 ? messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"message-item\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Message:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 18\n          }, this), \" \", message.Message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No messages found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(TeacherChatbox, \"ptxQbtgO4BVoqd0l8Tz6O41ItJw=\");\n_c = TeacherChatbox;\nexport default TeacherChatbox;\nvar _c;\n$RefreshReg$(_c, \"TeacherChatbox\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","TeacherChatbox","_s","messages","setMessages","studentid","setstudentid","fetchMessages","id","localStorage","getItem","response","fetch","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","message","index","Message","_c","$RefreshReg$"],"sources":["C:/Users/Shreyansh/Desktop/STC/teacher/src/components/Chatbox/TeacherChatbox.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './TeacherChatbox.css';\r\n\r\nconst TeacherChatbox = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [studentid, setstudentid] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n        const id=localStorage.getItem('id');\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/studentchat?Teacher_id=${id}`); // Adjust the endpoint as necessary\r\n        const data = await response.json();\r\n        setMessages(data);\r\n        setstudentid\r\n      } catch (error) {\r\n        console.error('Error fetching messages:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"messages-page-container\">\r\n      <h2>Messages</h2>\r\n      <ul className=\"messages-list\">\r\n        {messages.length > 0 ? (\r\n          messages.map((message, index) => (\r\n            <li key={index} className=\"message-item\">\r\n              {/* <p><strong>From:</strong> {message.teacherName}</p> */}\r\n              \r\n              <p><strong>Message:</strong> {message.Message}</p>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <li>No messages found.</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeacherChatbox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,EAAE,GAACC,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgDJ,EAAE,EAAE,CAAC,CAAC,CAAC;QACpF,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCV,WAAW,CAACS,IAAI,CAAC;QACjBP,YAAY;MACd,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDR,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKiB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtClB,OAAA;MAAAkB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBtB,OAAA;MAAIiB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC1Bf,QAAQ,CAACoB,MAAM,GAAG,CAAC,GAClBpB,QAAQ,CAACqB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC1B1B,OAAA;QAAgBiB,SAAS,EAAC,cAAc;QAAAC,QAAA,eAGtClB,OAAA;UAAAkB,QAAA,gBAAGlB,OAAA;YAAAkB,QAAA,EAAQ;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACG,OAAO,CAACE,OAAO;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GAH3CI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACL,CAAC,gBAEFtB,OAAA;QAAAkB,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAC3B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACpB,EAAA,CAtCID,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AAwCpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}