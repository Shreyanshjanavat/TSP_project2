{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shreyansh\\\\Desktop\\\\STC\\\\teacher\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { Routes, Route, BrowserRouter as Router } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Admin from './Pages/Admin';\nimport Adminstu from './Pages/Adminstu';\nimport Login from './components/Login/Login';\nimport ExamResult from './components/Examresult/Examresult';\nimport OTPForm from './components/ForgetPassword/OTPForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [choice, setChoice] = useState(null);\n  useEffect(() => {\n    // Check if userChoice is already saved in localStorage\n    const savedChoice = localStorage.getItem('userChoice');\n    if (savedChoice) {\n      // If userChoice is saved, set choice based on it\n      setChoice(savedChoice === 'teacher');\n    }\n  }, []);\n  const handleUserChoice = isTeacher => {\n    // Update choice state and save userChoice to localStorage\n    setChoice(isTeacher);\n    localStorage.setItem('userChoice', isTeacher ? 'teacher' : 'student');\n  };\n  const isAdminLoggedIn = () => {\n    return localStorage.getItem('key') === '120';\n  };\n  const isStudentLoggedIn = () => {\n    return localStorage.getItem('key') === '123';\n  };\n\n  // Render modal to select user type if choice is not made yet\n  if (choice === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Who are you?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUserChoice(true),\n          children: \"Teacher\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUserChoice(false),\n          children: \"Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/forgetpassword\",\n        element: /*#__PURE__*/_jsxDEV(OTPForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"if(localstorage.getItem(fog))\", choice && isAdminLoggedIn() ? /*#__PURE__*/_jsxDEV(Admin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 40\n      }, this) : null, !choice && isStudentLoggedIn() ? /*#__PURE__*/_jsxDEV(Adminstu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 43\n      }, this) : null, !isAdminLoggedIn() && !isStudentLoggedIn() && /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 56\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YhPFAYWmllUCB/MYemQUrRvsFS0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","BrowserRouter","Router","useState","useEffect","Admin","Adminstu","Login","ExamResult","OTPForm","jsxDEV","_jsxDEV","App","_s","choice","setChoice","savedChoice","localStorage","getItem","handleUserChoice","isTeacher","setItem","isAdminLoggedIn","isStudentLoggedIn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Shreyansh/Desktop/STC/teacher/src/App.js"],"sourcesContent":["import './App.css';\nimport { Routes, Route, BrowserRouter as Router } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Admin from './Pages/Admin';\nimport Adminstu from './Pages/Adminstu';\nimport Login from './components/Login/Login';\nimport ExamResult from './components/Examresult/Examresult';\nimport OTPForm from './components/ForgetPassword/OTPForm';\n\nfunction App() {\n  const [choice, setChoice] = useState(null);\n\n  useEffect(() => {\n    // Check if userChoice is already saved in localStorage\n    const savedChoice = localStorage.getItem('userChoice');\n    if (savedChoice) {\n      // If userChoice is saved, set choice based on it\n      setChoice(savedChoice === 'teacher');\n    }\n  }, []);\n\n  const handleUserChoice = (isTeacher) => {\n    // Update choice state and save userChoice to localStorage\n    setChoice(isTeacher);\n    localStorage.setItem('userChoice', isTeacher ? 'teacher' : 'student');\n  };\n\n  const isAdminLoggedIn = () => {\n    return localStorage.getItem('key') === '120';\n  };\n\n  const isStudentLoggedIn = () => {\n    return localStorage.getItem('key') === '123';\n  };\n\n  // Render modal to select user type if choice is not made yet\n  if (choice === null) {\n    return (\n      <div className=\"modal\">\n        <div className=\"modal-content\">\n          <h2>Who are you?</h2>\n          <button onClick={() => handleUserChoice(true)}>Teacher</button>\n          <button onClick={() => handleUserChoice(false)}>Student</button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Router>\n      <Routes>\n        <Route path='/forgetpassword' element={<OTPForm/>}/>\n      </Routes>\n      <div>\n        if(localstorage.getItem(fog))\n        \n        {/* Render Admin or Adminstu or Login based on choice and localStorage */}\n        {choice && isAdminLoggedIn() ? <Admin /> : null}\n        {!choice && isStudentLoggedIn() ? <Adminstu /> : null}\n        {/* Render Login if conditions are not met */}\n        {!isAdminLoggedIn() && !isStudentLoggedIn() && <Login />}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}